<?php

interface InterfaceExample {

    const define = [1, 2];
    const callable = [1, 2];
    const trait = [1, 2];
    const extends = [1, 2];
    const implements = [1, 2];
    const static = [1, 2];
    const abstract = [1, 2];
    const final = [1, 2];
    const public = [1, 2];
    const protected = [1, 2];
    const private = [1, 2];
    const const = [1, 2];
    const enddeclare = [1, 2];
    const endfor = [1, 2];
    const endforeach = [1, 2];
    const endif = [1, 2];
    const endwhile = [1, 2];
    const and = [1, 2];
    const global = [1, 2];
    const goto = [1, 2];
    const instanceof = 100;
    const insteadof = 100;
    const interface = 100;
    const namespace = 100;
    const new = 100;
    const or = 100;
    const xor = 100;
    const try = 100;
    const use = 100;
    const var = 100;
    const exit = 100;
    const list = 100;
    const clone = 100;
    const include = 100;
    const include_once = 100;
    const throw = 100;
    const array = 100;
    const print = 100;
    const echo = 100;
    const require = 100;
    const require_once = 100;
    const return = 100;
    const else = 100;
    const elseif = 100;
    const default = 100;
    const break = 100;
    const continue = 100;
    const switch = 100;
    const yield = 100;
    const function = 100;
    const if = 100;
    const endswitch = 100;
    const finally = 100;
    const for = 100;
    const foreach = 100;
    const declare = 100;
    const case = 100;
    const do = 100;
    const while = 100;
    const as = 100;
    const catch = 100;
    const die = 100;
    const self = 100;
    const parent = 100;
    const __CLASS__ = 100;
    const __TRAIT__ = 100;
    const __FUNCTION__ = 100;
    const __METHOD__ = 100;
    const __LINE__ = 100;
    const __FILE__ = 100;
    const __DIR__ = 100;
    const __NAMESPACE__ = 100;
}
